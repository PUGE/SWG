<template>
  <div class="home">
    <div class="control">
      <div id="dnd">
      <form enctype="multipart/form-data" method="post" @name="uploadBox">
        <div class="dnd-container">
          <div class="start" @name="stareIcon"></div>   
          <div class="done" @name="doneIcon"></div>
        </div>
        <p>选择或者拖拽PSD文件 <a href="https://share.weiyun.com/59u3Glc" target="view_window">下载示例PSD</a></p>
        <button class="dndAlternative" @click="uploadFile">选择</button>
        <input type="file" name="upload" accept="*.psd" @name="uploadInput">
      </form>
    </div>
    <div class="card-box">
      <div class="model-box card">
        <div class="title">生成模式</div>
        <input type="radio" name="rb" id="m1" @click="switchShow('currency', 'real')" checked/>
        <label for="m1">通用页面</label>
        <input type="radio" name="rb" id="m3" @click="switchShow('phone', 'centrality')" />
        <label for="m3">手机页面</label>
        <input type="radio" name="rb" id="m4" @click="switchShow('swiper', 'centrality')"/>
        <label for="m4">手机动画</label>
        <input type="radio" name="rb" id="m5" @click="switchShow('parallax', 'centrality')"/>
        <label for="m5">视差滚动</label>
        <div class="clear"></div>
      </div>
      
      
      <div class="currency-box modle-control card" @name="currency">
        <div class="title">屏幕适配</div>
        <input type="radio" name="cu" id="control-real" value="real" @click="changeAdaptation()" checked/>
        <label for="control-real">真实还原</label>
        <input type="radio" name="cu" id="control-ratio" value="ratio" @click="changeAdaptation()"/>
        <label for="control-ratio">适应屏幕</label>
        <input type="radio" name="cu" id="control-level-ratio" value="levelRatio" @click="changeAdaptation()"/>
        <label for="control-level-ratio">横向适应</label>
        <div class="clear"></div>
      </div>

      <div class="phone-box modle-control card" @name="phone">
        <div class="title">屏幕适配</div>
        <input type="radio" name="ph" id="control-centrality" value="centrality" @click="changeAdaptation"/>
        <label for="control-centrality">中心缩放</label>
        <input type="radio" name="ph" id="control-tile" value="tile" @click="changeAdaptation"/>
        <label for="control-tile">背景铺满</label>
        <input type="radio" name="ph" id="control-middle" value="middle" @click="changeAdaptation"/>
        <label for="control-middle">中央显示</label>
        <div class="clear"></div>
      </div>

      <div class="swiper-box modle-control card" @name="swiper">
        <div class="title">屏幕适配</div>
        <input type="radio" name="sw" id="sw-control-centrality" value="centrality" @click="changeAdaptation" checked/>
        <label for="sw-control-centrality">中心缩放</label>
        <input type="radio" name="sw" id="sw-control-middle" value="middle" @click="changeAdaptation"/>
        <label for="sw-control-middle">中央显示</label>
        <div class="clear"></div>
        <div class="title">切换形式</div>
        <input type="radio" name="sd" id="sw-direction-vertical" value="vertical" @click="changeSwitchMode" checked/>
        <label for="sw-direction-vertical">竖直切换</label>
        <input type="radio" name="sd" id="sw-direction-horizontal" value="horizontal" @click="changeSwitchMode"/>
        <label for="sw-direction-horizontal">水平切换</label>
        <div class="clear"></div>
      </div>

      
      <div class="image-box card">
        <div class="title">图片形式</div>
        <input type="radio" name="output" id="o1" value="background" @click="changeOutPut" checked/>
        <label for="o1">背景模式</label>
        <input type="radio" name="output" id="o2" value="img" @click="changeOutPut"/>
        <label for="o2">图片标签</label>
        <div class="clear"></div>
      </div>

      <div class="export-box card">
        <div class="title">输出配置</div>
        <input type="checkbox" name="cb" id="outText" />
        <label for="outText" @click="changeOutText('outText')">导出文字</label>
        <input type="checkbox" name="co" id="compress" value="true" checked/>
        <label for="compress" @click="changeOutText('compress')">压缩图片</label>
        <div class="clear"></div>
      </div>
      
      <div class="music-box card">
        <div class="title">背景音乐</div>
        <input type="checkbox" name="bgm" id="bgm-centrality" value="bgm" @click="changeOutText('bgm')"/>
        <label for="bgm-centrality">开启音乐</label>
        <div class="clear"></div>
        <div class="title">音乐链接</div>
        <input type="text" id="musicSrcInput" value="https://cunchu.site/swg/bgm.mp3"/>
      </div>

      <div class="progress-box" @name="progress">
        <img src="@&progress.svg&"/>
        <div class="progress-text" @name="progressText"></div>
      </div>
    </div>
    
    <div class="tips">系统不支持PS中的特殊效果,请在上传前将有特殊效果的图层合并为智能对象!</div>
  </div>
</template>

<script>
  module.exports = {
    data: {
      mode: 'currency',
      output: 'background',
      outText: false,
      compress: true,
      // 切换模式
      switchMode: 'vertical',
      // 适配模式
      adaptation: 'real',
      bgm: false,
      musicSrc: 'https://cunchu.site/swg/bgm.mp3'
    },
    created: function () {
      $dom('uploadInput').onchange = () => {
        this.upload($dom('uploadInput').files[0])
      }
      // 拖拽上传事件
      const uploadBox = $dom('uploadBox')
      uploadBox.ondragcenter = (e) => {
        e.preventDefault()
      }
      uploadBox.ondragover = (e) => {
        e.preventDefault()
        uploadBox.classList.add('hover')
      }
      uploadBox.ondragleave = (e) => {
        e.preventDefault()
        e.stopImmediatePropagation()
        uploadBox.classList.remove('hover')
      }
      uploadBox.ondrop = (e) => {
        e.preventDefault()
        uploadBox.classList.remove('hover')
        this.upload(e.dataTransfer.files[0])
      }
    },
    uploadFile: function () {
      this.$event.preventDefault()
      $dom('uploadInput').click()
    },
    upload: function (fileData) {
      if (!fileData) {
        console.log('放弃上传!')
      }
      if(fileData.name.lastIndexOf('.psd') + 4 !== fileData.name.length){
        alert('只允许上传psd文件!')
        return false
      }

      if(fileData.size > 5 * 60 * 1024 * 1024 ){
        alert('上传文件的大小超出限制!')
        return false
      }

      const file = new FormData()
      file.append('data', fileData)
      
      for (let key in this.data) {
        file.append(key,  this.data[key])
      }
      // 获取选择模式
      const mode = this.data.mode
      // 输出模式
      const output = this.data.output
      const outText = this.data.outText
      // 传输文件
      const xhr = new XMLHttpRequest()
      xhr.open("POST", 'uploads', true)
      //上传进度事件
      xhr.upload.addEventListener("progress", (result) => {
        if (result.lengthComputable) {
          const percentComplete = result.loaded / result.total
          $dom('stareIcon').style.display = 'none'
          $dom('progress').style.display = 'block'
          const uploadValue = Math.round(percentComplete * 100)
          if (uploadValue < 100) {
            $dom('progressText').innerText = `正在上传文件: ${uploadValue}%`
          } else {
            $dom('progressText').innerText = `服务器正在对PSD文件进行处理!`
          }
        }
      }, false)
      xhr.addEventListener("readystatechange", () => {
        const result = xhr
        if (result.status != 200) { //error
          console.log('上传失败', result.status, result.statusText, result.response)
        } 
        else if (result.readyState == 4) { // 上传完毕
          const msg = JSON.parse(result.response)
          $dom('progressText').innerText = `准备就绪,即将预览页面!`
          setTimeout(() => {
            $go('show', 'moveToLeft', 'moveFromRight', {
              id: msg.id
            })
          }, 1000)
        }
      })
      xhr.send(file)
    },
    changeAdaptation: function (clear) {
      console.log('更改模式')
      if (clear) this.hideModleControl()
      if (this.$el.checked) {
        this.data.adaptation = this.$el.value
      }
    },
    changeSwitchMode: function (clear) {
      console.log('更改切换模式')
      if (clear) this.hideModleControl()
      if (this.$el.checked) {
        this.data.switchMode = this.$el.value
      }
    },
    changeOutPut: function () {
      if (this.$el.checked) {
        this.data.output = this.$el.value
      }
    },
    changeOutText: function (item) {
      this.data[item] = !this.data[item]
    },
    hideModleControl: function () {
      const modleControlList = document.getElementsByClassName('modle-control')
      for (let index = 0; index < modleControlList.length; index++) {
        const element = modleControlList[index]
        if (element.style) {
          element.style.display = 'none'
        }
      }
    },
    // 切换显示详细菜单
    switchShow: function (name, defaultValue) {
      this.data.mode = name
      this.data.adaptation = defaultValue
      this.hideModleControl()
      const activeList = document.getElementsByClassName(name + '-box')
      for (let ind = 0; ind < activeList.length; ind++) {
        const element = activeList[ind]
        element.style.display = 'block'
      }
      this.data.adaptation = defaultValue
      document.getElementById('control-' + defaultValue).checked = true
    }
  }
</script>


<style lang="less">
ol, ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

q, blockquote {
  quotes: none;
}
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

a img {
  border: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block;
}

body, html {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

.clear {
  clear: both;
}

.control {
  color: #8e44ad;
  padding: 10px;
  width: calc(100% - 20px);
  height: calc(100% - 20px);
  position: relative;
  overflow: hidden;
}

.control .title {
  font-size: 15px;
  line-height: 25px;
  margin-bottom: 10px;
  color: #333;
  border-bottom: 1px solid #ccc;
}
.card-box {
  height: calc(100% - 256px);
  overflow: auto;
}
.modle-control {
  display: none;
}
.currency-box {
  display: block;
}
.tips {
  position: fixed;
  bottom: 0;
  width: calc(100% - 40px);
  padding: 0 10px;
  line-height: 30px;
  color: #999;
  text-align: right;
  font-size: 14px;
  user-select: none;
  pointer-events: none;
}
.progress-box {
  position: fixed;
  background-color: white;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  z-index: 2;
  display: none;
  img {
    width: 160px;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 40px;
    top: 0;
    margin: auto;
  }
  .progress-text {
    color: royalblue;
    text-align: center;
    line-height: 30px;
    position: absolute;
    width: 100%;
    top: 160px;
    bottom: 0;
    margin: auto;
    height: 30px;
  }
}
.music-box {
  input {
    width: calc(100% - 25px);
    margin: 5px 0;
    padding: 0 10px;
    height: 25px;
    border: none;
    background-color: #ccc;
  }
}
.card {
  background-color: white;
  box-shadow: 0 2px 3px 0 rgba(0,0,0,.2);
  padding: 10px;
  margin: 10px 0;
}
.swiper-box {
  display: none;
}
</style>